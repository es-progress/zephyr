name: CI
on:
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/main.yml
      - .shellcheckrc
      - "bin/**"
env:
  TERM: xterm-256color
jobs:
  format:
    name: Check format
    uses: es-progress/.github/.github/workflows/beautysh.yml@main

  linter:
    name: Linting
    needs: format
    uses: es-progress/.github/.github/workflows/shellcheck.yml@main

  check:
    name: Check changed modules
    runs-on: ubuntu-22.04
    needs: linter
    outputs:
      apps: ${{ steps.modules.outputs.apps }}
      gnome: ${{ steps.modules.outputs.gnome }}
      other: ${{ steps.modules.outputs.other }}
      packages: ${{ steps.modules.outputs.packages }}
      services: ${{ steps.modules.outputs.services }}
      shell: ${{ steps.modules.outputs.shell }}
      system: ${{ steps.modules.outputs.system }}
      tools: ${{ steps.modules.outputs.tools }}
      post-install: ${{ steps.modules.outputs.post-install }}
      remix: ${{ steps.modules.outputs.remix }}
    steps:
      - name: Self checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        run: |
          git diff --name-only origin/main... > ~/changed.files
          cat ~/changed.files

      - name: Check changed modules
        # Step need an id to be defined to later retrieve the output value
        id: modules
        run: |
          run_all=
          if grep -qs .github/workflows/main.yml ~/changed.files; then
            run_all=1
          fi
          if grep -qs .github/actions ~/changed.files; then
            run_all=1
          fi
          if [[ -n "${run_all}" ]]; then
            echo "::notice::Will run all modules"
            echo apps=yes >> "$GITHUB_OUTPUT"
            echo gnome=yes >> "$GITHUB_OUTPUT"
            echo other=yes >> "$GITHUB_OUTPUT"
            echo packages=yes >> "$GITHUB_OUTPUT"
            echo services=yes >> "$GITHUB_OUTPUT"
            echo shell=yes >> "$GITHUB_OUTPUT"
            echo system=yes >> "$GITHUB_OUTPUT"
            echo tools=yes >> "$GITHUB_OUTPUT"
            echo post-install=yes >> "$GITHUB_OUTPUT"
            echo remix=yes >> "$GITHUB_OUTPUT"
          fi

          if grep -qs apps ~/changed.files; then
            echo "::notice::Will run customize/apps"
            echo apps=yes >> "$GITHUB_OUTPUT"
          fi
          if grep -qs gnome ~/changed.files; then
            echo "::notice::Will run customize/gnome"
            echo gnome=yes >> "$GITHUB_OUTPUT"
          fi
          if grep -qs other ~/changed.files; then
            echo "::notice::Will run customize/other"
            echo other=yes >> "$GITHUB_OUTPUT"
          fi
          if grep -qs packages ~/changed.files; then
            echo "::notice::Will run customize/packages"
            echo packages=yes >> "$GITHUB_OUTPUT"
          fi
          if grep -qs services ~/changed.files; then
            echo "::notice::Will run customize/services"
            echo services=yes >> "$GITHUB_OUTPUT"
          fi
          if grep -qs shell ~/changed.files; then
            echo "::notice::Will run customize/shell"
            echo shell=yes >> "$GITHUB_OUTPUT"
          fi
          if grep -qs system ~/changed.files; then
            echo "::notice::Will run customize/system"
            echo system=yes >> "$GITHUB_OUTPUT"
          fi
          if grep -qs tools ~/changed.files; then
            echo "::notice::Will run customize/tools"
            echo tools=yes >> "$GITHUB_OUTPUT"
          fi
          if grep -qs install ~/changed.files; then
            echo "::notice::Will run install/post-install"
            echo post-install=yes >> "$GITHUB_OUTPUT"
          fi
          if grep -qs remix ~/changed.files; then
            echo "::notice::Will run remix"
            echo remix=yes >> "$GITHUB_OUTPUT"
          fi
        shell: bash

  tests-apps:
    name: Integration tests (customize/apps)
    runs-on: ubuntu-22.04
    needs: check
    if: needs.check.outputs.apps == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v4

      - name: Install Zephyr
        uses: ./.github/actions/install-zephyr

      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          # Don't test soon-to-be-deprecated pulse-effects module
          modules: jmeter vbox

  tests-gnome:
    name: Integration tests (customize/gnome)
    runs-on: ubuntu-22.04
    needs: check
    if: needs.check.outputs.gnome == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v4

      - name: Install Zephyr
        uses: ./.github/actions/install-zephyr

      - name: Install GNOME
        run: |
          sudo apt-get update
          sudo apt-get --quiet install --yes --no-install-recommends gnome-session gnome-software gnome-system-monitor gdm3 nautilus

      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          # Dash-to-panel needs a running GNOME, was unable to do it in CI --> skip
          modules: autostart fonts gnome-config user-dirs wallpaper

  tests-other:
    name: Integration tests (customize/other)
    runs-on: ubuntu-22.04
    needs: check
    if: needs.check.outputs.other == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v4

      - name: Install Zephyr
        uses: ./.github/actions/install-zephyr

      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          modules: cron local

  tests-packages:
    name: Integration tests (customize/packages)
    runs-on: ubuntu-22.04
    needs: check
    if: needs.check.outputs.packages == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v4

      - name: Install Zephyr
        uses: ./.github/actions/install-zephyr

      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          modules: apt bin node pip snap

  tests-services:
    name: Integration tests (customize/services)
    runs-on: ubuntu-22.04
    needs: check
    if: needs.check.outputs.services == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v4

      - name: Install Zephyr
        uses: ./.github/actions/install-zephyr

      - name: Install dependencies
        run: ./bin/zephyrctl customize tester certificates

      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          # Run php first to install PHP-FPM required by Apache
          modules: php apache mariadb phpmyadmin

  tests-shell:
    name: Integration tests (customize/shell)
    runs-on: ubuntu-22.04
    needs: check
    if: needs.check.outputs.shell == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v4

      - name: Install Zephyr
        uses: ./.github/actions/install-zephyr

      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          modules: bash scripts

  tests-system:
    name: Integration tests (customize/system)
    runs-on: ubuntu-22.04
    needs: check
    if: needs.check.outputs.system == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v4

      - name: Install Zephyr
        uses: ./.github/actions/install-zephyr

      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          modules: certificates dirs locale netplan resolved shorewall sudo sysctl systemd users

  tests-tools:
    name: Integration tests (customize/tools)
    runs-on: ubuntu-22.04
    needs: check
    if: needs.check.outputs.tools == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v4

      - name: Install Zephyr
        uses: ./.github/actions/install-zephyr

      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          modules: composer dig gh git gpg mc nano nmap pass-update ssh tomb

  tests-post-install:
    name: Integration tests (post-install)
    runs-on: ubuntu-22.04
    needs: check
    if: needs.check.outputs.post-install == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v4

      - name: Install Zephyr
        uses: ./.github/actions/install-zephyr

      - name: Run post-install
        run: ./bin/zephyrctl post-install live tester github-actions
        shell: bash

  tests-remix:
    name: Integration tests (remix)
    runs-on: ubuntu-22.04
    needs: check
    if: needs.check.outputs.remix == 'yes'
    env:
      ZEPHYR_WORKSPACE: /mnt/zephyr
    steps:
      - name: Self checkout
        uses: actions/checkout@v4

      - name: Install Zephyr
        uses: ./.github/actions/install-zephyr

      - name: Create working directory
        run: |
          sudo mkdir -p "${ZEPHYR_WORKSPACE}"
          sudo chown -R "${USER}:${USER}" "${ZEPHYR_WORKSPACE}"

      - name: Download Ubuntu Live CD
        run: wget -O "${ZEPHYR_WORKSPACE}/ubuntu.iso" --quiet --show-progress --progress=dot:giga https://releases.ubuntu.com/jammy/ubuntu-22.04.5-desktop-amd64.iso

      - name: Create remix
        run: ./bin/zephyrctl remix "${ZEPHYR_WORKSPACE}/ubuntu.iso" "${ZEPHYR_WORKSPACE}/zephyr.iso"
        shell: bash
