name: CI
on:
  pull_request:
    branches:
      - main
    paths:
      - "bin/**"
jobs:
  format:
    name: Check format
    uses: es-progress/shell/.github/workflows/reuse-beautysh.yml@main
  linter:
    name: Linting
    needs: format
    uses: es-progress/shell/.github/workflows/reuse-shellcheck.yml@main
  check:
    name: Check changed modules
    runs-on: ubuntu-20.04
    needs: linter
    outputs:
      apps: ${{ steps.modules.outputs.apps }}
      gnome: ${{ steps.modules.outputs.gnome }}
      packages: ${{ steps.modules.outputs.packages }}
      random: ${{ steps.modules.outputs.random }}
      services: ${{ steps.modules.outputs.services }}
      shell: ${{ steps.modules.outputs.shell }}
      system: ${{ steps.modules.outputs.system }}
      tools: ${{ steps.modules.outputs.tools }}
      remix: ${{ steps.modules.outputs.remix }}
    steps:
      - name: Self checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        run: git diff --numstat origin/main... | awk '{print $3'} > ~/changed.files

      - name: Check changed modules
        id: modules
        run: |
          if grep -qs customize/apps ~/changed.files; then
            echo "::set-output name=apps::yes"
          fi
          if grep -qs customize/gnome ~/changed.files; then
            echo "::set-output name=gnome::yes"
          fi
          if grep -qs customize/packages ~/changed.files; then
            echo "::set-output name=packages::yes"
          fi
          if grep -qs customize/random ~/changed.files; then
            echo "::set-output name=random::yes"
          fi
          if grep -qs customize/services ~/changed.files; then
            echo "::set-output name=services::yes"
          fi
          if grep -qs customize/shell ~/changed.files; then
            echo "::set-output name=shell::yes"
          fi
          if grep -qs customize/system ~/changed.files; then
            echo "::set-output name=system::yes"
          fi
          if grep -qs customize/tools ~/changed.files; then
            echo "::set-output name=tools::yes"
          fi
          if grep -qs bin/remix ~/changed.files; then
            echo "::set-output name=remix::yes"
          fi
        shell: bash
  tests-apps:
    name: Integration tests (customize/apps)
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.apps == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v3

      - name: Link profiles
        run: ln -s example profiles

      - name: Install dependencies
        run: |
          sudo add-apt-repository --yes ppa:mikhailnov/pulseeffects
          sudo apt-get install --yes --no-install-recommends pulseeffects virtualbox

      - name: Execute scripts (1st pass)
        run: |
          ./bin/zephyrctl customize default atom
          ./bin/zephyrctl customize default jmeter
          ./bin/zephyrctl customize default pulse-effects
          ./bin/zephyrctl customize default virtualbox
        shell: bash

      - name: Execute scripts (2nd pass)
        run: |
          ./bin/zephyrctl customize default atom
          ./bin/zephyrctl customize default jmeter
          ./bin/zephyrctl customize default pulse-effects
          ./bin/zephyrctl customize default virtualbox
        shell: bash
  tests-gnome:
    name: Integration tests (customize/gnome)
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.gnome == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v3

      - name: Link profiles
        run: ln -s example profiles

      - name: Install dependencies
        run: sudo apt-get install --yes --no-install-recommends gettext gnome-session gnome-software gnome-system-monitor gdm3 nautilus

      - name: Execute scripts (1st pass)
        run: |
          ./bin/zephyrctl customize default autostart
          # Dash-to-panel needs a running GNOME, was unable to do it in CI --> skip
          # ./bin/zephyrctl customize default dash-to-panel
          ./bin/zephyrctl customize default fonts
          ./bin/zephyrctl customize default gnome-config
          ./bin/zephyrctl customize default user-dirs
          ./bin/zephyrctl customize default wallpaper
        shell: bash

      - name: Execute scripts (2nd pass)
        run: |
          ./bin/zephyrctl customize default autostart
          # ./bin/zephyrctl customize default dash-to-panel
          ./bin/zephyrctl customize default fonts
          ./bin/zephyrctl customize default gnome-config
          ./bin/zephyrctl customize default user-dirs
          ./bin/zephyrctl customize default wallpaper
        shell: bash
  tests-packages:
    name: Integration tests (customize/packages)
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.packages == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v3

      - name: Link profiles
        run: ln -s example profiles

      - name: Execute scripts (1st pass)
        run: |
          ./bin/zephyrctl customize default apt
          ./bin/zephyrctl customize default bin
          ./bin/zephyrctl customize default node
          ./bin/zephyrctl customize default pip
          ./bin/zephyrctl customize default snap
        shell: bash

      - name: Execute scripts (2nd pass)
        run: |
          ./bin/zephyrctl customize default apt
          ./bin/zephyrctl customize default bin
          ./bin/zephyrctl customize default node
          ./bin/zephyrctl customize default pip
          ./bin/zephyrctl customize default snap
        shell: bash
  tests-random:
    name: Integration tests (customize/random)
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.random == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v3

      - name: Link profiles
        run: ln -s example profiles

      - name: Install dependencies
        run: |
          sudo mkdir -p /opt
          sudo touch /opt/some-script /opt/other-script
          git clone https://github.com/semseysandor/goto.git bash_goto
          mkdir -p ~/.bash
          cp bash_goto/goto.sh ~/.bash/goto

      - name: Execute scripts (1st pass)
        run: |
          ./bin/zephyrctl customize default cron
          ./bin/zephyrctl customize default custom
          ./bin/zephyrctl customize default goto
        shell: bash

      - name: Execute scripts (2nd pass)
        run: |
          ./bin/zephyrctl customize default cron
          ./bin/zephyrctl customize default custom
          ./bin/zephyrctl customize default goto
        shell: bash
  tests-services:
    name: Integration tests (customize/services)
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.services == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v3

      - name: Link profiles
        run: ln -s example profiles

      - name: Install dependencies
        run: |
          sudo apt-get install --yes --no-install-recommends apache2 php7.4
          ./bin/zephyrctl customize default certificates

      - name: Execute scripts (1st pass)
        run: |
          ./bin/zephyrctl customize default apache
          ./bin/zephyrctl customize default mariadb
          ./bin/zephyrctl customize default php
          ./bin/zephyrctl customize default phpmyadmin
        shell: bash

      - name: Execute scripts (2nd pass)
        run: |
          ./bin/zephyrctl customize default apache
          ./bin/zephyrctl customize default mariadb
          ./bin/zephyrctl customize default php
          ./bin/zephyrctl customize default phpmyadmin
        shell: bash
  tests-shell:
    name: Integration tests (customize/shell)
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.shell == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v3

      - name: Link profiles
        run: ln -s example profiles

      - name: Execute scripts (1st pass)
        run: |
          ./bin/zephyrctl customize default bash
          ./bin/zephyrctl customize default scripts
        shell: bash

      - name: Execute scripts (2nd pass)
        run: |
          ./bin/zephyrctl customize default bash
          ./bin/zephyrctl customize default scripts
        shell: bash
  tests-system:
    name: Integration tests (customize/system)
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.system == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v3

      - name: Link profiles
        run: ln -s example profiles

      - name: Install dependencies
        run: |
          sudo apt-get install --yes --no-install-recommends network-manager
          sudo chmod =0440 /etc/sudoers.d/runner

      - name: Execute scripts (1st pass)
        run: |
          ./bin/zephyrctl customize default certificates
          ./bin/zephyrctl customize default dirs
          ./bin/zephyrctl customize default fstab
          ./bin/zephyrctl customize default fstrim
          ./bin/zephyrctl customize default groups
          ./bin/zephyrctl customize default locale
          ./bin/zephyrctl customize default netplan
          ./bin/zephyrctl customize default resolved
          ./bin/zephyrctl customize default shorewall
          ./bin/zephyrctl customize default sudo
        shell: bash

      - name: Execute scripts (2nd pass)
        run: |
          ./bin/zephyrctl customize default certificates
          ./bin/zephyrctl customize default dirs
          ./bin/zephyrctl customize default fstab
          ./bin/zephyrctl customize default fstrim
          ./bin/zephyrctl customize default groups
          ./bin/zephyrctl customize default locale
          ./bin/zephyrctl customize default netplan
          ./bin/zephyrctl customize default resolved
          ./bin/zephyrctl customize default shorewall
          ./bin/zephyrctl customize default sudo
        shell: bash
  tests-tools:
    name: Integration tests (customize/tools)
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.tools == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v3

      - name: Link profiles
        run: ln -s example profiles

      - name: Install dependencies
        run: |
          sudo apt-get install --yes --no-install-recommends dnsutils gpg mc
          sudo snap install nmap

      - name: Execute scripts (1st pass)
        run: |
          ./bin/zephyrctl customize default dig
          ./bin/zephyrctl customize default gh
          ./bin/zephyrctl customize default git
          ./bin/zephyrctl customize default gpg
          ./bin/zephyrctl customize default mc
          ./bin/zephyrctl customize default nano
          ./bin/zephyrctl customize default nmap
          ./bin/zephyrctl customize default pass-update
          ./bin/zephyrctl customize default ssh
          ./bin/zephyrctl customize default tomb
        shell: bash

      - name: Execute scripts (2nd pass)
        run: |
          ./bin/zephyrctl customize default dig
          ./bin/zephyrctl customize default gh
          ./bin/zephyrctl customize default git
          ./bin/zephyrctl customize default gpg
          ./bin/zephyrctl customize default mc
          ./bin/zephyrctl customize default nano
          ./bin/zephyrctl customize default nmap
          ./bin/zephyrctl customize default pass-update
          ./bin/zephyrctl customize default ssh
          ./bin/zephyrctl customize default tomb
        shell: bash
  tests-remix:
    name: Integration tests (remix)
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.remix == 'yes'
    steps:
      - name: Self checkout
        uses: actions/checkout@v3

      - name: Link profiles
        run: ln -s example profiles

      - name: Download Ubuntu Live CD
        run: wget -O ubuntu.iso --quiet https://releases.ubuntu.com/20.04.5/ubuntu-20.04.5-desktop-amd64.iso

      - name: Create remix
        run: ./bin/zephyrctl create ubuntu.iso
        shell: bash
