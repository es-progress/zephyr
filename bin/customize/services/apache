#!/usr/bin/env bash
###############
## ES-Ubuntu ##
##           ##
## Config    ##
## Apache    ##
###############

###############
## FUNCTIONS ##
###############

## Install Apache modules
##
## @param   $1  Global/Local
## @param   $2  Config file
############################
_install-module() {
    local selector="${1:?"Selector missing"}"
    local cfg_file="${2:?"Config file missing"}"
    local modules=()

    print-header "Install Apache modules [${selector}]..."
    for module in $(cfg-read "${cfg_file}" apache-module); do
        modules+=("${module}")
    done
    sudo a2enmod "${modules[@]}"
    print-finish
}

## Copy Apache config file
##
## @param   $1  Global/Local
## @param   $2  Config dir
############################
_config() {
    local selector="${1:?"Selector missing"}"
    local cfg_dir="${2:?"Config dir missing"}"

    print-header "Config Apache [${selector}]..."
    for file in $(find -L "${cfg_dir}" -mindepth 1 -maxdepth 1 -type f); do
        file_name=$(basename "${file}")
        sudo cp --no-preserve=mode,ownership "${file}" "/etc/apache2/conf-available/${file_name}"
        sudo a2enconf "${file_name}"
    done
    print-finish
}

##################
## SCRIPT START ##
##################

# Strict mode
set -euo pipefail
IFS=$'\n\t'

source "${PROJECT_ROOT}/bootstrap.sh"
check-not-root || exit 1

profile="${1:?"Profile missing"}"

if file=$(cfg-get "${profile}" services/global.cfg); then
    _install-module global "${file}"
fi
if file=$(cfg-get "${profile}" services/local.cfg); then
    _install-module local "${file}"
fi

print-status "Create default web dirs..."
sudo mkdir -p "${WEB_ROOT}/default"
sudo touch "${WEB_ROOT}/default/index.html"
sudo chown -R "${USER}:www-data" "${WEB_ROOT}"
print-finish

if dir=$(cfg-get "${profile}" services/apache/config.global.d); then
    _config global "${dir}"
fi
if dir=$(cfg-get "${profile}" services/apache/config.local.d); then
    _config local "${dir}"
fi

print-header "Create certificate for default vhost..."
if sudo test ! -e "/etc/ssl/private/ESubuntu_Apache_default_vhost.key" || [[ ! -e "/etc/ssl/certs/ESubuntu_Apache_default_vhost.pem" ]]; then
    # Create CSR
    csr=$(sudo mktemp)
    sudo openssl req \
        -new \
        -sha512 \
        -newkey rsa:4096 \
        -nodes \
        -keyout /etc/ssl/private/ESubuntu_Apache_default_vhost.key \
        -out "${csr}" \
        -subj "${DEF_VIRT_HOST_SUBJECT}"

    # Sign CSR --> create certificate
    tmp_config=$(sudo mktemp)
    sudo openssl x509 \
        -req \
        -sha512 \
        -extfile "${tmp_config}" \
        -CAkey "/etc/ssl/private/${ROOT_CA_NAME}.key" \
        -CA "/usr/local/share/ca-certificates/${ROOT_CA_NAME}.crt" \
        -CAcreateserial \
        -in "${csr}" \
        -out /etc/ssl/certs/ESubuntu_Apache_default_vhost.pem \
        -days 365
    print-finish
else
    print-finish "Key found, skipped"
fi

if file=$(cfg-get "${profile}" services/apache/vhost-default.conf); then
    print-header "Setup default vhosts..."
    [[ -f /etc/apache2/sites-available/default-ssl.conf ]] && sudo rm /etc/apache2/sites-available/default-ssl.conf
    sudo cp "${file}" /etc/apache2/sites-available/000-default.conf
    sudo sed -i \
        -e "s@{{ doc_root }}@${WEB_ROOT}/default@g" \
        -e "s@{{ ROOT_CA_NAME }}@${ROOT_CA_NAME}@g" \
        /etc/apache2/sites-available/000-default.conf
    sudo a2ensite 000-default.conf
    print-finish
fi

print-header "Restart services..."
sudo systemctl enable apache2.service
sudo systemctl restart apache2.service
print-finish

exit 0
