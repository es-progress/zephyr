#!/usr/bin/env bash
############
## Zephyr ##
##        ##
## Config ##
## Apache ##
############

###############
## FUNCTIONS ##
###############

## Install Apache modules
##
## @param   $1  Global/Local
## @param   $2  Config file
############################
_install-module() {
    local selector="${1:?"Selector missing"}"
    local cfg_file="${2:?"Config file missing"}"
    local modules=()

    print-header "Install Apache modules [${selector}]..."
    # shellcheck disable=SC2310,SC2311
    for module in $(cfg-read "${cfg_file}" apache-module); do
        modules+=("${module}")
    done
    sudo a2enmod "${modules[@]}"
    print-finish
}

## Copy Apache config file
##
## @param   $1  Global/Local
## @param   $2  Config dir
############################
_config() {
    local selector="${1:?"Selector missing"}"
    local cfg_dir="${2:?"Config dir missing"}"

    print-header "Config Apache [${selector}]..."
    find -L "${cfg_dir}" -mindepth 1 -maxdepth 1 -type f -exec sudo cp --no-preserve=mode,ownership {} /etc/apache2/conf-available/ \;
    find -L "${cfg_dir}" -mindepth 1 -maxdepth 1 -type f -print0 | xargs -0I{} basename -z {} .conf | xargs -0L1 sudo a2enconf
    print-finish
}

##################
## SCRIPT START ##
##################

# Strict mode
set -eufo pipefail
IFS=$'\n\t'

source "${PROJECT_ROOT}/bin/bootstrap.sh"
check-not-root

profile="${1:?"Profile missing"}"
web_root=
def_virt_host_name=
def_virt_host_subject=
root_ca_name=

# shellcheck disable=SC2310,SC2311
if file=$(cfg-get "${profile}" system/global.cfg); then
    cfg-eval "${file}" certificate
fi
# shellcheck disable=SC2310,SC2311
if file=$(cfg-get "${profile}" system/local.cfg); then
    cfg-eval "${file}" certificate
fi
# shellcheck disable=SC2310,SC2311
if file=$(cfg-get "${profile}" services/global.cfg); then
    _install-module global "${file}"
    cfg-eval "${file}" apache
fi
# shellcheck disable=SC2310,SC2311
if file=$(cfg-get "${profile}" services/local.cfg); then
    _install-module local "${file}"
    cfg-eval "${file}" apache
fi

[[ -z "${web_root}" ]] && exit 1
[[ -z "${def_virt_host_subject}" ]] && exit 1
[[ -z "${def_virt_host_name}" ]] && exit 1
[[ -z "${root_ca_name}" ]] && exit 1

print-status Create default web dirs...
sudo mkdir -p "${web_root}/default"
sudo touch "${web_root}/default/index.html"
sudo chown -R "${USER}:www-data" "${web_root}"
print-finish

# shellcheck disable=SC2310,SC2311
if dir=$(cfg-get "${profile}" services/apache/config.global.d); then
    _config global "${dir}"
fi
# shellcheck disable=SC2310,SC2311
if dir=$(cfg-get "${profile}" services/apache/config.local.d); then
    _config local "${dir}"
fi

print-header Create certificate for default vhost...
if sudo test ! -e "/etc/ssl/private/${def_virt_host_name}.key" -o ! -e "/etc/ssl/certs/${def_virt_host_name}.pem"; then
    # Create CSR
    csr=$(sudo mktemp)
    sudo openssl req \
        -new \
        -sha512 \
        -newkey rsa:4096 \
        -nodes \
        -keyout "/etc/ssl/private/${def_virt_host_name}.key" \
        -out "${csr}" \
        -subj "${def_virt_host_subject}"

    # Sign CSR --> create certificate
    tmp_config=$(sudo mktemp)
    sudo openssl x509 \
        -req \
        -sha512 \
        -extfile "${tmp_config}" \
        -CAkey "/etc/ssl/private/${root_ca_name}.key" \
        -CA "/usr/local/share/ca-certificates/${root_ca_name}.crt" \
        -CAcreateserial \
        -in "${csr}" \
        -out "/etc/ssl/certs/${def_virt_host_name}.pem" \
        -days 365
    print-finish
else
    print-finish Key found, skipped
fi

# shellcheck disable=SC2310,SC2311
if file=$(cfg-get "${profile}" services/apache/vhost-default.conf); then
    print-header Setup default vhosts...
    [[ -f /etc/apache2/sites-available/default-ssl.conf ]] && sudo rm /etc/apache2/sites-available/default-ssl.conf
    sudo cp --no-preserve=mode,ownership "${file}" /etc/apache2/sites-available/000-default.conf
    sudo sed -i \
        -e "s@{{ DOC_ROOT }}@${web_root}/default@g" \
        -e "s@{{ ROOT_CA_NAME }}@${root_ca_name}@g" \
        -e "s@{{ DEF_VIRT_HOST_NAME }}@${def_virt_host_name}@g" \
        /etc/apache2/sites-available/000-default.conf
    sudo a2ensite 000-default.conf
    print-finish
fi

print-header Restart services...
sudo systemctl enable apache2.service
sudo systemctl restart apache2.service
print-finish

exit 0
