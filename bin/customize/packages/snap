#!/usr/bin/env bash
############
## Zephyr ##
##        ##
## Config ##
## snap   ##
############

###############
## FUNCTIONS ##
###############

## Install snaps
##
## @param   $1  Global/Local
## @param   $2  Config file
############################
_install() {
    local selector="${1:?Selector missing}"
    local cfg_file="${2:?Config file missing}"
    local snaps_installed line package install_options option options

    # shellcheck disable=SC2310
    if is-empty-section "${cfg_file}" snap; then
        return 0
    fi

    print-header Install snaps "[${selector}]..."
    snaps_installed=$(snap list --color=never --unicode=never)
    # shellcheck disable=SC2310,SC2311
    for line in $(cfg-read "${cfg_file}" snap); do
        IFS=$' \t' read -r package install_options <<< "${line}"
        IFS=, read -r -a install_options <<< "${install_options}"
        # Set options
        options=(--color=always --unicode=always)
        for option in "${install_options[@]}"; do
            options+=("--${option}")
        done

        # Update or install
        if grep -qs "^${package}" <<<"${snaps_installed}"; then
            print-header Update "${package}..."
            sudo snap refresh "${package}" "${options[@]}"
            print-finish
        else
            print-header Install "${package}..."
            sudo snap install "${package}" "${options[@]}"
            print-finish
        fi
    done
    print-finish Snaps installed.
}

##################
## SCRIPT START ##
##################

# Strict mode
set -eufo pipefail
IFS=$'\n\t'

source "${PROJECT_ROOT}/bin/bootstrap.sh"
check-not-root

profile="${1:?Profile missing}"

install-apt snapd

# shellcheck disable=SC2310,SC2311
if file=$(cfg-get "${profile}" packages/global.cfg); then
    _install global "${file}"
fi
# shellcheck disable=SC2310,SC2311
if file=$(cfg-get "${profile}" packages/local.cfg); then
    _install local "${file}"
fi

print-header Purge old revisions...
for line in $(snap list --all | awk '/disabled/{print $1, $3}'); do
    IFS=$' \t' read -r snapname revision <<< "${line}"
    sudo snap remove "${snapname}" --revision="${revision}"
done
print-finish

print-status Purge cache...
sudo find /var/lib/snapd/cache -type f -delete
print-finish

exit 0
