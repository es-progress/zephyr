#!/usr/bin/env bash
################
## ES-Ubuntu  ##
##            ##
## Packages   ##
## Virtualbox ##
################

# Strict mode minus IFS
set -euo pipefail

source "${DIR_ESUBUNTU}/bootstrap.sh"
check-not-root || exit 1

print-header "Install virtualbox..."
sudo apt-get update
sudo apt install --yes virtualbox virtualbox-guest-additions-iso
print-finish

print-status "Apply global configs..."
configs=$(read-file-cfg "${ES_CUSTOMIZE_CFG}/packages/virtualbox")
while read -r cfg_name cfg_value; do
    if [[ -n "${cfg_name}" && -n "${cfg_value}" ]]; then
        # eval value to let the shell expand tilde and env vars
        cfg_value=$(eval echo "${cfg_value}")
        vboxmanage setproperty "${cfg_name}" "${cfg_value}"
    fi
done <<< "${configs}"
print-finish

# Local settings
if [[ -f "${ES_CFG_LOCAL}/config/customize/packages/virtualbox/vboxconfig" ]]; then
    print-status "Apply local configs..."

    # vboxmanage configs
    vbox_configs=$(read-file-cfg "${ES_CFG_LOCAL}/config/customize/packages/virtualbox/vboxconfig" vboxmanage)
    while read -r cfg_name cfg_value; do
        if [[ -n "${cfg_name}" && -n "${cfg_value}" ]]; then
            # eval value to let the shell expand tilde and env vars
            cfg_value=$(eval echo "${cfg_value}")
            vboxmanage setproperty "${cfg_name}" "${cfg_value}"
        fi
    done <<< "${vbox_configs}"

    # Other configs
    other_configs=$(read-file-cfg "${ES_CFG_LOCAL}/config/customize/packages/virtualbox/vboxconfig" settings)
    while read -r line; do
        eval "${line}"
    done <<<"${other_configs}"
    print-finish
fi

# Register VMs
if [[ -d "${ES_CFG_LOCAL}/config/customize/packages/virtualbox" ]]; then
    print-status "Register VMs..."

    # Get & create machine folder
    target_dir=$(echo "${VM_LOCAL_DIR:-~/.config/VirtualBox}")
    mkdir -p "${target_dir}"

    # Read VM info
    vm_info=$(read-file-cfg "${ES_CFG_LOCAL}/config/customize/packages/virtualbox/vboxconfig" virtmachines)
    while read -r line; do
        eval "${line}"
    done <<<"${vm_info}"

    registered_vms=$(vboxmanage list vms)

    for def in "${vm[@]:-}"; do
        IFS="@" read -r dir uuid <<<"${def}"

        # Check if already registered
        if ! grep -qs "${uuid}" <<<"${registered_vms}"; then
            cp -a "${ES_CFG_LOCAL}/config/customize/packages/virtualbox/${dir}" "${target_dir}"
            find "$target_dir/${dir}" -name "*.vbox" -exec vboxmanage registervm '{}' \;
        fi
    done
    print-finish
fi

exit 0
