#!/usr/bin/env bash
################
## ES-Ubuntu  ##
##            ##
## Config     ##
## Virtualbox ##
################

# Strict mode
set -euo pipefail
IFS=$'\n\t'

source "${PROJECT_ROOT}/bootstrap.sh"
check-not-root || exit 1

profile="${1:?"Profile missing"}"

print-status "Load vbox modules to kernel..."
sudo modprobe vboxdrv
sudo modprobe vboxnetadp
sudo modprobe vboxnetflt
print-finish

if file=$(cfg-get "${profile}" apps/virtualbox/vboxconfig.global); then
    print-status "Apply global configs..."
    configs=$(cfg-read "${file}")
    for line in ${configs}; do
        IFS=$' \t' read -r cfg_name cfg_value <<< "${line}"
        [[ -z "${cfg_name}" || -z "${cfg_value}" ]] && continue

        # eval value to let the shell expand tilde and env vars
        cfg_value=$(eval echo "${cfg_value}")
        vboxmanage setproperty "${cfg_name}" "${cfg_value}"
    done
    print-finish
fi

if file=$(cfg-get "${profile}" apps/virtualbox/vboxconfig.local); then
    print-status "Apply local configs..."

    # vboxmanage configs
    vbox_configs=$(cfg-read "${file}" vboxmanage)
    for line in ${vbox_configs}; do
        IFS=$' \t' read -r cfg_name cfg_value <<< "${line}"
        [[ -z "${cfg_name}" || -z "${cfg_value}" ]] && continue

        # eval value to let the shell expand tilde and env vars
        cfg_value=$(eval echo "${cfg_value}")
        vboxmanage setproperty "${cfg_name}" "${cfg_value}"
    done

    # Other configs
    other_configs=$(cfg-read "${file}" settings)
    for line in ${other_configs}; do
        eval "${line}"
    done

    # Read VM info
    vm_info=$(cfg-read "${file}" virtmachines)
    for line in ${vm_info}; do
        eval "${line}"
    done
    print-finish
fi

if dir=$(cfg-get "${profile}" apps/virtualbox/vm); then
    print-status "Register VMs..."

    # Get & create machine folder
    target_dir=$(echo "${VM_LOCAL_DIR:-~/.config/VirtualBox}")
    mkdir -p "${target_dir}"

    registered_vms=$(vboxmanage list vms)

    for def in "${vm[@]:-}"; do
        IFS="@" read -r dir_vm uuid <<<"${def}"

        # Check if already registered
        if ! grep -qs "${uuid}" <<<"${registered_vms}"; then
            [[ -e "${dir}/${dir_vm}" ]] || continue
            
            cp -a "${dir}/${dir_vm}" "${target_dir}"
            find "$target_dir/${dir_vm}" -name "*.vbox" -exec vboxmanage registervm '{}' \;
        fi
    done
    print-finish
fi

exit 0
