#!/usr/bin/env bash
################
## Zephyr     ##
##            ##
## Config     ##
## Virtualbox ##
################

###############
## FUNCTIONS ##
###############

## Config VirtualBox
##
## @param   $1  Global/Local
## @param   $2  Config file
############################
_config() {
    local selector="${1:?Selector missing}"
    local cfg_file="${2:?Config file missing}"
    local line cfg_name cfg_value

    print-status Config VirtualBox "[${selector}]..."
    # vboxmanage configs
    # shellcheck disable=SC2310,SC2311
    for line in $(cfg-read "${cfg_file}" virtualbox-vboxmanage); do
        IFS=$' \t' read -r cfg_name cfg_value <<< "${line}"
        [[ -z "${cfg_name}" || -z "${cfg_value}" ]] && continue

        # eval value to let the shell expand tilde and env vars
        cfg_value=$(eval echo "${cfg_value}")
        vboxmanage setproperty "${cfg_name}" "${cfg_value}"
    done
    # Other configs
    cfg-eval "${cfg_file}" virtualbox-settings
    # Read VM info
    cfg-eval "${cfg_file}" virtualbox-virtmachines
    print-finish
}

## Register virtual machines
##
## @param   $1  Global/Local
## @param   $2  Config dir
############################
_register() {
    local selector="${1:?Selector missing}"
    local cfg_dir="${2:?Config dir missing}"
    local registered_vms def vm uuid

    # Get & create machine folder
    mkdir -p "${VM_LOCAL_DIR:-~/.config/VirtualBox}"
    # Register VMs
    registered_vms=$(vboxmanage list vms)
    for def in "${vm[@]:-}"; do
        IFS=@ read -r vm uuid <<<"${def}"
        print-status Register VM: "${vm}" "[${selector}]..."
        # Check if already registered
        if ! grep -qs "${uuid}" <<<"${registered_vms}"; then
            [[ -e "${cfg_dir}/${vm}" ]] || continue

            cp -r --no-preserve=mode,ownership "${cfg_dir}/${vm}" "${VM_LOCAL_DIR:-~/.config/VirtualBox}"
            find "${VM_LOCAL_DIR:-~/.config/VirtualBox}/${vm}" -name "*.vbox" -exec vboxmanage registervm {} \;
            print-finish
        else
            print-finish Already registered, skip.
        fi
    done
}

##################
## SCRIPT START ##
##################

# Strict mode
set -eufo pipefail
IFS=$'\n\t'

source "${PROJECT_ROOT}/bin/bootstrap.sh"
check-not-root

profile="${1:?Profile missing}"

install-apt virtualbox

print-status Load vbox modules to kernel...
sudo modprobe vboxdrv
sudo modprobe vboxnetadp
sudo modprobe vboxnetflt
print-finish

vm=()
# shellcheck disable=SC2310,SC2311
if file=$(cfg-get "${profile}" apps/global.cfg); then
    _config global "${file}"
fi
# shellcheck disable=SC2310,SC2311
if dir=$(cfg-get "${profile}" apps/vbox/vm.global.d); then
    _register global "${dir}"
fi

vm=()
# shellcheck disable=SC2310,SC2311
if file=$(cfg-get "${profile}" apps/local.cfg); then
    _config local "${file}"
fi
# shellcheck disable=SC2310,SC2311
if dir=$(cfg-get "${profile}" apps/vbox/vm.local.d); then
    _register local "${dir}"
fi

exit 0
