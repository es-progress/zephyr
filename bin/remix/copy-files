#!/usr/bin/env bash
############################
## Zephyr                 ##
##                        ##
## Remix                  ##
## Copy files to SquashFS ##
############################

# Strict mode
set -eufo pipefail
IFS=$'\n\t'

source "${PROJECT_ROOT}/bin/bootstrap.sh"
check-not-root

print-status Copy files to SquashFS...
target="${PATH_EXTRACT}/squashfs-root/${INSTALL_DIR}"
# Purge target directory
sudo rm -rf "${target}"
sudo mkdir -p "${target}"
# General project files
sudo install --mode=0644 \
    "${PROJECT_ROOT}/zephyr.cfg" \
    "${PROJECT_ROOT}/LICENSE" \
    "${PROJECT_ROOT}/README.md" "${target}/"
# Bin
sudo cp -r "${PROJECT_ROOT}/bin" "${target}/"
# Profiles
if [[ -e "${PATH_PROFILES}" ]]; then
    sudo cp -Lr "${PATH_PROFILES}" "${target}/"
fi
# Payload
if [[ -e "${PATH_PAYLOAD}" ]]; then
    sudo cp -Lr "${PATH_PAYLOAD}" "${target}/"
fi
# Local config
if [[ -e "${PROJECT_ROOT}/zephyr.local.cfg" ]]; then
    sudo install --mode=0644 "${PROJECT_ROOT}/zephyr.local.cfg" "${target}/"
fi
# Bash completion
sudo install --mode=0644 --no-target-directory "${PROJECT_ROOT}/bin/completion.sh" "${PATH_EXTRACT}/squashfs-root/etc/bash_completion.d/zephyrctl"
sudo sed -i "s@{{ INSTALL_DIR }}@${INSTALL_DIR}@g" "${PATH_EXTRACT}/squashfs-root/etc/bash_completion.d/zephyrctl"
# Symlink controller
sudo rm -f "${PATH_EXTRACT}/squashfs-root/usr/local/bin/zephyrctl"
sudo ln -s "${INSTALL_DIR}/bin/zephyrctl" "${PATH_EXTRACT}/squashfs-root/usr/local/bin/zephyrctl"
print-finish

print-status Set permissions...
sudo chmod -R u+rw,go+r "${target}"
sudo find "${target}" -executable -exec chmod go+x {} +
print-finish

print-status Patch GRUB...
# Boot from encrypted partition
if ! grep -qsx "GRUB_ENABLE_CRYPTODISK=y" "${PATH_EXTRACT}/squashfs-root/etc/default/grub"; then
    cat <<EOF | sudo tee -a "${PATH_EXTRACT}/squashfs-root/etc/default/grub" >/dev/null

# Enabling boot from LUKS
GRUB_ENABLE_CRYPTODISK=y
EOF
fi
print-finish

print-status Override grub.cfg...
if [[ -e "${PATH_REMIX}/grub.cfg" ]]; then
    sudo install --mode=0444 "${PATH_REMIX}/grub.cfg" "${PATH_EXTRACT}/iso/boot/grub/"
    print-finish
else
    print-finish Not found custom grub.cfg, skip.
fi

print-status Copy preseed files...
if [[ -e "${PATH_REMIX}/preseeds" ]]; then
    while read -r -d '' path; do
        tempfile=$(mktemp)
        while read -r line; do
            # Check if line is an include directive
            if [[ "${line}" == "#!include "* ]]; then
                include_file=$(cut -d' ' -f2 <<<"${line}")
                if [[ -f "${PATH_REMIX}/preseeds/${include_file}" ]]; then
                    cat "${PATH_REMIX}/preseeds/${include_file}" >> "${tempfile}"
                else
                    print-warning "Include file not found: ${include_file}"
                fi
                continue
            fi

            echo "${line}" >> "${tempfile}"
        done < "${path}"

        file_name=$(basename "${path}")
        sudo install --mode=0444 "${tempfile}" "${PATH_EXTRACT}/iso/preseed/${file_name}"
    done < <(find -L "${PATH_REMIX}/preseeds" -type f -print0 | sort -z || true)
    print-finish
else
    print-finish Not found any preseed files, skip.
fi

exit 0
