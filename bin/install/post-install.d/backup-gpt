#!/usr/bin/env bash
##################
## ES-Ubuntu    ##
##              ##
## Post-install ##
## Backup GPT   ##
##################

###############
## FUNCTIONS ##
###############

## Backup GPT partition table
##
## @param    $1  Device
## @param    $2  Backup file
#############################
_gpt-backup() {
    local device="${1:?"Device missing"}"
    local backup_file="${2:?"Backup filename missing"}"
    sgdisk -b "${backup_file}" "${device}"
}

##################
## SCRIPT START ##
##################

# Strict mode
set -eufo pipefail
IFS=$'\n\t'

source "${PROJECT_ROOT}/bootstrap.sh"
check-root || exit 1

profile="${1:?"Profile missing"}"
backup_dir=
shift

# Read config file, get options
if file=$(cfg-get "${profile}" install/global.cfg); then
    cfg-eval "${file}" backup-gpt
fi
if file=$(cfg-get "${profile}" install/local.cfg); then
    cfg-eval "${file}" backup-gpt
fi

[[ -z "${backup_dir}" ]] && exit 1

# Maps
map_files=()
for map in "${@}"; do
    if file=$(cfg-get "${profile}" "install/partition-maps/${map}"); then
        map_files+=("${file}")
    fi
done
[[ -z "${map_files[*]}" ]] && error-exit "No maps found"

mkdir -p "${backup_dir}"

# Loop through maps
for map_file in "${map_files[@]}"; do
    # Loop through disks
    for line in $(cfg-read "${map_file}" DISKS); do
        IFS=$' \t' read -r name device part_prefix <<< "${line}"
        print-header "Backup partition table for ${name}..."
        _gpt-backup "${device}" "${backup_dir}/${name}"
        print-finish
    done
done

exit 0
