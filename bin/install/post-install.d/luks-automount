#!/usr/bin/env bash
####################
## Zephyr         ##
##                ##
## Post-install   ##
## LUKS automount ##
####################

###############
## FUNCTIONS ##
###############

## Add key to a LUKS partition
##
## @param    $1  LUKS partition
## @param    $2  Key file
## @param    $3  Key slot
###############################
_luks-add-key() {
    local partition="${1:?"Partition missing"}"
    local key_file="${2:?"Key file missing"}"
    local key_slot="${3:?"Key slot missing"}"

    # Deleting previous key
    cryptsetup luksKillSlot -q "${partition}" "${key_slot}" || true
    # Add new
    cryptsetup luksAddKey --iter-time 3000 --key-slot "${key_slot}" "${partition}" "${key_file}"
}

## Update /etc/crypttab
##
## @param    $1  LUKS partition
## @param    $2  Label
## @param    $3  Key file
###############################
_luks-crypttab() {
    local partition="${1:?"Partition missing"}"
    local label="${2:?"Label missing"}"
    local key_file="${3:?"Key file missing"}"

    UUID=$(blkid -s UUID -o value "${partition}")
    if ! grep -qs "${UUID}" /etc/crypttab; then
        echo "LUKS_${label} UUID=${UUID} ${key_file} luks,discard" >>/etc/crypttab
    fi
}

## Copy initramfs config file
##
## @param   $1  Global/Local
## @param   $2  Config dir
############################
_config() {
    local selector="${1:?"Selector missing"}"
    local cfg_dir="${2:?"Config dir missing"}"

    print-status "Config initramfs [${selector}]..."
    find -L "${cfg_dir}" -mindepth 1 -maxdepth 1 -type f -exec sudo cp --no-preserve=mode,ownership {} /etc/initramfs-tools/conf.d/ \;
    print-finish
}

##################
## SCRIPT START ##
##################

# Strict mode
set -eufo pipefail
IFS=$'\n\t'

source "${PROJECT_ROOT}/bin/bootstrap.sh"
check-root

profile="${1:?"Profile missing"}"
key_dir=
key_slot=
shift

# Read config file, get options
# shellcheck disable=SC2310,SC2311
if file=$(cfg-get "${profile}" install/global.cfg); then
    cfg-eval "${file}" luks
fi
# shellcheck disable=SC2310,SC2311
if file=$(cfg-get "${profile}" install/local.cfg); then
    cfg-eval "${file}" luks
fi

[[ -z "${key_dir}" ]] && exit 1
[[ -z "${key_slot}" ]] && exit 1

# Maps
map_files=()
for map in "${@}"; do
    # shellcheck disable=SC2310,SC2311
    if file=$(cfg-get "${profile}" "install/disk-maps/${map}"); then
        map_files+=("${file}")
    fi
done
[[ -z "${map_files[*]}" ]] && error-exit "No maps found"

print-header Install cryptsetup-initramfs...
apt-get install --yes --no-install-recommends cryptsetup-initramfs
print-finish

print-status Config cryptsetup-initramfs...
sed -i -r "/^#?KEYFILE_PATTERN=/ c KEYFILE_PATTERN=${key_dir}/*.key" /etc/cryptsetup-initramfs/conf-hook
print-finish

# shellcheck disable=SC2310,SC2311
if dir=$(cfg-get "${profile}" install/initramfs/global.d); then
    _config global "${dir}"
fi
# shellcheck disable=SC2310,SC2311
if dir=$(cfg-get "${profile}" install/initramfs/local.d); then
    _config local "${dir}"
fi

print-status Create LUKS keys dir...
mkdir -p "${key_dir}"
chmod o-rwx "${key_dir}"
print-finish

# Loop through maps
for map_file in "${map_files[@]}"; do
    # Loop through disks
    for line in $(cfg-read "${map_file}" DISKS); do
        IFS=$' \t' read -r name device part_prefix <<< "${line}"
        # Loop through partitions
        for part_line in $(cfg-read "${map_file}" "PARTITIONS_${name}"); do
            IFS=$' \t' read -r number _ _ type label <<< "${part_line}"

            partition="${device}${part_prefix}${number}"
            partition_key_file="${key_dir}/${partition#/dev/}-${label}.key"

            if [[ "${type}" == luks* ]]; then
                print-header "Create key file for ${partition}..."
                dd if=/dev/urandom of="${partition_key_file}" bs=4096 count=1
                chmod go-rwx "${partition_key_file}"
                print-finish

                print-header "Add machine key to LUKS ${label}..."
                _luks-add-key "${partition}" "${partition_key_file}" "${key_slot}"
                print-finish

                print-status "Update crypttab with ${label}..."
                _luks-crypttab "${partition}" "${label}" "${partition_key_file}"
                print-finish
            fi
        done
    done
done

exit 0
