#!/usr/bin/env bash
###############
## ES-Ubuntu ##
##           ##
## Bundling  ##
## Pack ISO  ##
###############

# Strict mode
set -euo pipefail
IFS=$'\n\t'

source "${DIR_ESUBUNTU}/bootstrap.sh"
check-not-root || exit 1

# Options
orig_iso_image="${1?:"Original ISO file missing"}"
new_iso_image="${ES_ISO}/${ES_ISO_FILE}"

print-header "Compressing SquashFS filesystem..."
[[ -e "${ES_EXTRACT}/iso/casper/filesystem.squashfs" ]] && sudo rm "${ES_EXTRACT}/iso/casper/filesystem.squashfs"
sudo mksquashfs "${ES_EXTRACT}/squashfs-root/" "${ES_EXTRACT}/iso/casper/filesystem.squashfs"
print-finish

old_dir=$(pwd)
print-status "Calculate filesystem size..."
cd "${ES_EXTRACT}/squashfs-root/"
sudo du -sx --block-size=1 ./ | cut -f1 | sudo tee "${ES_EXTRACT}/iso/casper/filesystem.size" > /dev/null
print-finish

print-status "Calculate checksum..."
cd "${ES_EXTRACT}/iso"
sudo find . -type f -print0 | sudo xargs -0 md5sum | grep -v "\./md5sum.txt" | grep -v "\./isolinux" | sudo tee md5sum.txt > /dev/null
print-finish
cd "${old_dir}"

print-header "Building ISO image..."
# Copy MBR file
mbr_file=$(mktemp)
dd if="${orig_iso_image}" bs=1 count=446 of="${mbr_file}"
mkdir -p "${ES_ISO}"
# Create ISO
[[ -e "${new_iso_image}" ]] && rm "${new_iso_image}"
xorriso -as mkisofs \
    -r \
    -V "${ES_ISO_LABEL}" \
    -l \
    -isohybrid-mbr "${mbr_file}" \
    -c isolinux/boot.cat \
    -b isolinux/isolinux.bin \
    -no-emul-boot \
    -boot-load-size 4 \
    -boot-info-table \
    -eltorito-alt-boot \
    -e boot/grub/efi.img \
    -no-emul-boot \
    -isohybrid-gpt-basdat \
    -o "${new_iso_image}" \
    "${ES_EXTRACT}/iso"
print-finish

echo
print-finish "ES-Ubuntu ISO created!"
echo "Newly created image: ${new_iso_image}"

exit 0
