#!/usr/bin/env bash
################
## ES-Ubuntu  ##
##            ##
## Controller ##
################

#############
# FUNCTIONS #
#############

# Main usage text
#################
usage_main(){
    local command line name help
    command[0]="create:Create ES-Ubuntu ISO"
    command[1]="burn:Burn to ISO to USB"
    command[2]="install:Install ES-Ubuntu"
    command[3]="update:Update a module"
    command[4]="partition:Partition disk"
    command[5]="post-install:OS post-install steps"
    command[6]="help:Display help"

    printf "${TXT_GREEN}ES-Ubuntu${TXT_NORM} controller\n\n"
    printf "${TXT_YELLOW}Usage:${TXT_NORM}\n"
    printf "  esubuntuctl COMMAND [OPTIONS]...\n\n"
    printf "${TXT_YELLOW}Commands:${TXT_NORM}\n"
    for line in "${command[@]}"; do
        IFS=":" read -r name help <<<"${line}"
        printf "  ${TXT_GREEN}%-20s${TXT_NORM}%s\n" "${name}" "${help}"
    done

    exit 1
}

# Print usage
#
# @param    $1  Usage selector
##############################
usage(){
    local selector="${1:-}"
    local usage options line name help

    # Help
    usage_help="help COMMAND"
    options_help[0]="COMMAND:command to run (for available commands run 'esubuntuctl' without arguments)"
    # Create
    usage_create="create ISO_FILE"
    options_create[0]="ISO_FILE:ISO to customize (e.g. ubuntu live-cd)"
    # Burn
    usage_burn="burn ISO_FILE [DISK]"
    options_burn[0]="ISO_FILE:ISO to burn"
    options_burn[1]="DISK:Device to copy to (eg. /dev/sdc)"
    # Install
    usage_install="install [LOCAL_DIR]."
    options_install[0]="LOCAL_DIR:Absolute path to local config dir"
    # Update
    usage_update="update MODULE"
    options_update[0]="MODULE:Name of module to update (eg. packages, bash)"
    # Partition
    usage_part="partition MAP"
    options_part[0]="MAP:Partition map"
    # Post-install
    usage_postinstall="post-install MAP"
    options_postinstall[0]="MAP:Partition map"

    case "${selector}" in
        "") usage="${usage_help}"; options=("${options_help[@]}") ;;
        create)usage="${usage_create}";options=("${options_create[@]}") ;;
        burn) usage="${usage_burn}";options=("${options_burn[@]}") ;;
        install) usage="${usage_install}"; options=("${options_install[@]}") ;;
        update) usage="${usage_update}"; options=("${options_update[@]}") ;;
        partition) usage="${usage_part}"; options=("${options_part[@]}") ;;
        post-install) usage="${usage_postinstall}"; options=("${options_postinstall[@]}") ;;
        *) usage_main ;;
    esac

    printf "${TXT_YELLOW}Usage:${TXT_NORM}\n"
    printf "  esubuntuctl %s\n\n" "${usage}"
    printf "${TXT_YELLOW}Options:${TXT_NORM}\n"
    for line in "${options[@]}"; do
        IFS=":" read -r name help <<<"${line}"
        printf "  ${TXT_GREEN}%-20s${TXT_NORM}%s\n" "${name}" "${help}"
    done
}

# Install
#########
install(){
    # Symlink local dir
    if [[ -n "${1}" ]]; then
        [[ -h "${ES_CFG_LOCAL}" ]] && rm "${ES_CFG_LOCAL}"
        [[ ! -e "${ES_CFG_LOCAL}" ]] && ln -s "${1}" "${ES_CFG_LOCAL}"
    fi

    "${ES_CUSTOMIZE_SCRIPTS}/runner"

    echo
    print-finish "Installation finished!"
    read -r -p "Reboot is required, do you want it now? (y/n) "
    [[ ${REPLY} == 'y' || ${REPLY} == 'Y' ]] && reboot
}

# Create ISO
############
create(){
    if [[ -z "${1}" ]]; then
        print-error "ISO image missing!"
        usage create
        exit 1
    fi
    "${ES_BUNDLE_SCRIPTS}/iso-unpack" "${1}"
    "${ES_BUNDLE_SCRIPTS}/copy-esubuntu"
    "${ES_BUNDLE_SCRIPTS}/iso-pack" "${1}"
    "${ES_BUNDLE_SCRIPTS}/clean-up"
}

# Update module
###############
update(){
    if [[ -z "${1}" ]]; then
        print-error "Module missing!"
        usage update
        exit 1
    fi
    "${ES_CUSTOMIZE_SCRIPTS}/runner" "${1}"
}

# Burn ISO
##########
burn(){
    if [[ -z "${1}" ]]; then
        print-error "ISO image missing!"
        usage burn
        exit 1
    fi
    "${ES_BUNDLE_SCRIPTS}/iso-burn" "${1}" "${2:-}"
}

# Partition disks
#################
partition(){
    sudo DIR_ESUBUNTU="${DIR_ESUBUNTU}" "${ES_INSTALL_SCRIPTS}/partition" "${1:-}"
}

# Post-install
##############
post-install(){
    sudo DIR_ESUBUNTU="${DIR_ESUBUNTU}" "${ES_INSTALL_SCRIPTS}/post-install" "${1:-}"
}

################
# SCRIPT START #
################

# Strict mode
set -euo pipefail
IFS=$'\n\t'

# Set default for DIR_ESUBUNTU
if ! printenv DIR_ESUBUNTU >/dev/null 2>&1; then
    path_self=$(realpath "${0}")
    DIR_ESUBUNTU="$(cd "$(dirname "${path_self}")" >/dev/null 2>&1 && pwd)"
    export DIR_ESUBUNTU
fi

source "${DIR_ESUBUNTU}/bootstrap.sh"

# Parse options
cmd="${1:-}"
[[ -n "${cmd}" ]] && shift

# Switch action
case "${cmd}" in
    create|burn|install|update|partition|post-install) "${cmd}" "${@}" ;;
    help) usage "${1:-}" ;;
    *) usage_main ;;
esac

exit 0
