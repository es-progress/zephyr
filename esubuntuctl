#!/usr/bin/env bash
################
## ES-Ubuntu  ##
##            ##
## Controller ##
################

#############
# FUNCTIONS #
#############

# Usage
#######
usage(){
    local selector="${1:-}"

    # Main
    txt_main=$(cat <<EOF
${TXT_GREEN}ES-Ubuntu${TXT_NORM} controller

${TXT_YELLOW}Usage:${TXT_NORM}
  esubuntuctl COMMAND [OPTIONS]...

${TXT_YELLOW}Commands:${TXT_NORM}
  ${TXT_GREEN}create${TXT_NORM}            Create ES-Ubuntu ISO
  ${TXT_GREEN}burn${TXT_NORM}              Burn to ISO to USB
  ${TXT_GREEN}install${TXT_NORM}           Install ES-Ubuntu
  ${TXT_GREEN}update${TXT_NORM}            Update a module
  ${TXT_GREEN}partition${TXT_NORM}         Partition disk
  ${TXT_GREEN}post-install${TXT_NORM}      OS post-install steps
  ${TXT_GREEN}help${TXT_NORM}              Display help
EOF
    )
    # Help
    txt_help=$(cat <<EOF
${TXT_YELLOW}Usage:${TXT_NORM}
  esubuntuctl help COMMAND
EOF
    )
    # Create
    txt_create=$(cat <<EOF
${TXT_YELLOW}Usage:${TXT_NORM}
  esubuntuctl create ISO_FILE

${TXT_YELLOW}Options:${TXT_NORM}
  ISO_FILE          ISO to customize (e.g. ubuntu live-cd)
EOF
    )
    # Burn
    txt_burn=$(cat <<EOF
${TXT_YELLOW}Usage:${TXT_NORM}
  esubuntuctl burn ISO_FILE [DISK]

${TXT_YELLOW}Options:${TXT_NORM}
  ISO_FILE          ISO to burn
  DISK              Device to copy to (eg. /dev/sdc)
EOF
    )
    # Install
    txt_install=$(cat <<EOF
${TXT_YELLOW}Usage:${TXT_NORM}
  esubuntuctl install [LOCAL_DIR]

${TXT_YELLOW}Options:${TXT_NORM}
  LOCAL_DIR         Absolute path to local config dir
EOF
    )
    # Update
    txt_update=$(cat <<EOF
${TXT_YELLOW}Usage:${TXT_NORM}
  esubuntuctl update MODULE

${TXT_YELLOW}Options:${TXT_NORM}
  MODULE            Name of module to update (eg. packages, bash)
EOF
    )
    # Partition
    txt_part=$(cat <<EOF
${TXT_YELLOW}Usage:${TXT_NORM}
  esubuntuctl partition MAP

${TXT_YELLOW}Options:${TXT_NORM}
  MAP               Partition map
EOF
    )
    # Post-install
    txt_post_install=$(cat <<EOF
${TXT_YELLOW}Usage:${TXT_NORM}
  esubuntuctl post-install MAP

${TXT_YELLOW}Options:${TXT_NORM}
  MAP               Partition map
EOF
    )

    case "${selector}" in
        "") echo -e "${txt_help}" ;;
        create) echo -e "${txt_create}" ;;
        burn) echo -e "${txt_burn}" ;;
        install) echo -e "${txt_install}" ;;
        update) echo -e "${txt_update}" ;;
        partition) echo -e "${txt_part}" ;;
        post-install) echo -e "${txt_post_install}" ;;
        *) echo -e "${txt_main}" ;;
    esac
}

# Install
#########
install(){
    # Symlink local dir
    if [[ -n "${1}" ]]; then
        [[ -h "${ES_CFG_LOCAL}" ]] && rm "${ES_CFG_LOCAL}"
        [[ ! -e "${ES_CFG_LOCAL}" ]] && ln -s "${1}" "${ES_CFG_LOCAL}"
    fi

    "${ES_CUSTOMIZE_SCRIPTS}/runner"

    echo
    print-finish "Installation finished!"
    read -r -p "Reboot is required, do you want it now? (y/n) "
    [[ ${REPLY} == 'y' || ${REPLY} == 'Y' ]] && reboot
}

# Create ISO
############
create(){
    if [[ -z "${1}" ]]; then
        print-error "ISO image missing!"
        usage create
        exit 1
    fi
    "${ES_BUNDLE_SCRIPTS}/iso-unpack" "${1}"
    "${ES_BUNDLE_SCRIPTS}/copy-esubuntu"
    "${ES_BUNDLE_SCRIPTS}/iso-pack" "${1}"
    "${ES_BUNDLE_SCRIPTS}/clean-up"
}

# Update module
###############
update(){
    if [[ -z "${1}" ]]; then
        print-error "Module missing!"
        usage update
        exit 1
    fi
    "${ES_CUSTOMIZE_SCRIPTS}/runner" "${1}"
}

# Burn ISO
##########
burn(){
    if [[ -z "${1}" ]]; then
        print-error "ISO image missing!"
        usage burn
        exit 1
    fi
    "${ES_BUNDLE_SCRIPTS}/iso-burn" "${1}" "${2:-}"
}

# Partition disks
#################
partition(){
    sudo DIR_ESUBUNTU="${DIR_ESUBUNTU}" "${ES_INSTALL_SCRIPTS}/partition" "${1:-}"
}

# Post-install
##############
post-install(){
    "${ES_INSTALL_SCRIPTS}/post-install" "${1:-}"
}

################
# SCRIPT START #
################

# Strict mode
set -euo pipefail
IFS=$'\n\t'

# Set default for DIR_ESUBUNTU
if ! printenv DIR_ESUBUNTU >/dev/null 2>&1; then
    path_self=$(realpath "${0}")
    DIR_ESUBUNTU="$(cd "$(dirname "${path_self}")" >/dev/null 2>&1 && pwd)"
    export DIR_ESUBUNTU
fi

source "${DIR_ESUBUNTU}/bootstrap.sh"

# Parse options
cmd="${1:-}"
[[ -n "${cmd}" ]] && shift

# Switch action
case "${cmd}" in
    create) create "${1:-}" ;;
    burn) burn "${1:-}" "${2:-}" ;;
    install) install "${1:-}" ;;
    update) update "${1:-}" ;;
    partition) partition "${1:-}" ;;
    post-install) post-install "${1:-}" ;;
    help) usage "${1:-}" ;;
    *) usage main ;;
esac

exit 0
